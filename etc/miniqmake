#!/bin/sh

# This script is used to generate the file Makefile.aux

srcdir=
top_srcdir=

objs=
gens=
dirs=

echo "# This is generated automatically using \"miniqmake\"".
echo "# DO NOT EDIT BY HAND"
echo "# --------------------------------------------------------"

echo ""
echo ""

for src
do
    dir=`dirname $src`
    
    xdir=`echo $dir/ | awk  'BEGIN { s1="'$srcdir'/" ; s2="'$top_srcdir'/" 
                                    l1=length(s1) ; l2=length(s2) }
                            { if ( l1 > 0 && substr($0,1,l1) == s1 )
                                printf("${srcdir}/%s\n",substr($0,l1+1)); 
                              else if ( l2 > 0 && substr($0,1,l2) == s2 )
                                printf("${top_srcdir}/%s\n",substr($0,l2+1)); 
                              else
                                printf("%s\n",$0); } '`

    dirs="$dirs $xdir"

    case $src in
        --srcdir=*)
                srcdir=`echo $src | sed -e 's/^.*=//'`
                ;;

        --top_srcdir=*)
                top_srcdir=`echo $src | sed -e 's/^.*=//'`
                ;;

        *.c)
                base=`basename $src .c`
                objs="$objs $base.o"
                echo "${base}.o : ${xdir}$base.c"
                echo "	\${CC} \${CFLAGS} \${INCS} -c ${xdir}$base.c"
                ;;

        *.cpp)
                base=`basename $src .cpp`
                objs="$objs $base.o"
                echo "${base}.o : ${xdir}$base.cpp"
                echo "	\${CXX} \${CXXFLAGS} \${INCS} -c ${xdir}$base.cpp"

                if grep -q Q_OBJECT $dir/$base.cpp 
                then
                  moc="moc_${base}.inc"
                  echo "$moc : ${xdir}$base.cpp"
                  echo "	\${MOC} ${xdir}$base.cpp -o $moc"
                  echo "$base.o: $moc"
                  gens="$gens $moc"
                  dirs="$dirs ./"
                fi
                ;;

        *.h)
                base=`basename $src .h`
                dirs="$dirs $xdir"
                if grep -q Q_OBJECT $dir/$base.h 
                then
                  moc="moc_${base}.cpp"
                  obj="moc_${base}.o"
                  echo "$moc : ${xdir}$base.h"
                  echo "	\${MOC} ${xdir}$base.h -o $moc"
                  echo "$obj : $moc"
                  echo "	\${CXX} \${CXXFLAGS} \${INCS} -c $moc"
                  gens="$gens $moc"
                  objs="$objs $obj"
                fi
                ;;

        *.ui)
                base=`basename $src .ui`
                target="ui_${base}.h"
                echo "$target.h : ${xdir}$base.ui"
                echo "	\${UIC} ${xdir}$base.ui -o $target"
                gens="$gens $target"
                ;;
        *.qrc)
                base=`basename $src .qrc`
                target="qrc_${base}"
                echo "$target.cpp: ${xdir}$base.qrc"
                echo "	\${RCC} -name ${base} ${xdir}$base.qrc -o $target.cpp"
                echo "$target.o: $target.cpp"
                echo "	\${CXX} \${CXXFLAGS} \${INCS} -c $target.cpp"
                gens="$gens $target.cpp"
                objs="$objs ${target}.o"
                ;;
    esac
done
echo ""
echo ""

echo "OBJS = \\"
for n in $objs ; do echo " $n \\" ; done
echo ""
echo ""

echo "GENS = \\"
for n in $gens ; do echo " $n \\" ; done
echo ""
echo ""

echo "INCS = \\"
dirs="`( for n in $dirs ; do echo $n ; done ) | sort | uniq`"
for n in $dirs ; do echo " -I$n \\" ; done
echo ""
echo ""



